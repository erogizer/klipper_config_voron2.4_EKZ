#.................................................................................................................
# -SuperSlicer's start print gcode should contain the following:  
#   PRINT_START BED_TEMP=[first_layer_bed_temperature] EXTRUDER_TEMP=[first_layer_temperature]  
# -Cura's start print gcode should contain the following:  
#   PRINT_START BED_TEMP={material_bed_temperature_layer_0} EXTRUDER_TEMP={material_print_temperature_layer_0}
#   !! The following optional parameters can be specified. If not specified, the values set in printer.cfg will be used.
#    -Optionally can specify EXTRUDER_READY temperature, just below extruding temperature. The goal is to get the
#     nozzle hot enough to almost start oozing. For example, if using 240 for normal extruding, something such as
#     EXTRUDER_READY=210 would be sufficient.
#    -Optionally can specify ENCLOSURE_TEMP temperature, as ENCLOSURE_TEMP=40
#    -Optionally can specify Minutes to Soak, as SOAK=15
# -SuperSlicer's & Cura's end print gcode should contain the following:
#   Use PRINT_END for the slicer ending script
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
#[gcode_macro globalvariables]
#variable_defaultTempNozzle: 240        # The default Nozzle Extruding temperature if none is specified
#variable_defaultWarmNozzle: 160        # The default Nozzle Warming temperature if none is specified
#variable_defaultReadyNozzle: 210       # The default Nozzle Ready temperature if none is specified
#variable_defaultEnclosure: 40          # The default Enclosure temperature if none is specified
#variable_defaultTempBed: 110           # The default Bed temperature if none is specified
#variable_PurgeRetract: 0.1             # After completing purgeline, how much retraction to perform (Not normally needed)
#variable_EndRetract: 2.0               # After print has completed, how much retraction to perform
#variable_QGLbeforeSoakPrint: True      # (True/False) Perfrom QGL before applying heat soak for PRINT
#variable_PrePrintSoakMinutes: 15       # Minutes to heat-soak prior to printing
#variable_PostPrintCool: 1              # Post-Print cooling to prevent nozzle string, minutes of cooling
#variable_PostPrintParkCool: 2          # Once parks, minutes of cooling
#gcode:
#.................................................................................................................
# Required external macro(s) used by this macro set.
#
# _HEAT_WAIT
# _COOL_WAIT
# G32 (in MACRO-EUCLID.cfg)
# G3201 (in MACRO-EUCLID.cfg)
# CONFIG-NO_ENCLOSURE_CONTROL.cfg / CONFIG-ENCLOSURE_CONTROL.cfg for M141 command
# CURRENT_HIGH
# CURRENT_NORMAL
# PARK_UpperRight
# PARK_Center
#.................................................................................................................

[gcode_macro START_PRINT]
description: Performs all needed moves prior to printing
gcode:
    CLEAR_PAUSE
    BED_MESH_CLEAR
    M220 S100
    M221 S100
    LIGHT_ON
    STATUS_READY
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
    COMPUTE_MESH_PARAMETERS SIZE={FL_SIZE}
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
    {% set defaultTN = printer["gcode_macro globalvariables"].defaulttempnozzle|float %}
    {% set defaultWN = printer["gcode_macro globalvariables"].defaultwarmnozzle|float %}
    {% set defaultRN = printer["gcode_macro globalvariables"].defaultreadynozzle|float %}
    {% set defaultSOAK = printer["gcode_macro globalvariables"].preprintsoakminutes|float %}
    {% set defaultENCLOSURE = printer["gcode_macro globalvariables"].defaultenclosure|float %}
    {% set purgeRetract = printer["gcode_macro globalvariables"].purgeretract|float %}
    {% set defaultTB = printer["gcode_macro globalvariables"].defaulttempbed|float %}
    {% set BED_TEMP = params.BED_TEMP|default(defaultTB)|float %}
    {% set MATERIAL = params.MATERIAL|default("XXX")|string %}
    SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=ready VALUE={params.EXTRUDER_READY|default(defaultRN)|float}
    SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=temp VALUE={params.EXTRUDER_TEMP|default(defaultTN)|float}

    {% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(defaultENCLOSURE)|float %}
    {% set SOAK = params.SOAK|default(defaultSOAK) %}
    M118 gCode file passed the following to PRINT_START:
    M118 { rawparams }
    RESETSPEEDS 
    # Bring bed to full temperature, only warm hotend
    M140 S{BED_TEMP}
    M104 S{defaultWN}
    M141 S{ENCLOSURE_TEMP}
    G90
    G21
    M83
    G92 E0.0
    # Reset the G-Code Z offset
    SET_GCODE_OFFSET Z=0.0
    M117 Performing initial homing.
    G28
    PARK_Center
    M117 Bringing bed to temperature.
    STATUS_HEATING
    M190 S{BED_TEMP}
    _WAIT_Start MINUTES={SOAK}


[gcode_macro _PRINT_START2]
description: Part 2 - Performs all needed moves prior to printing
gcode:
    RESUME_BASE
    {% set EXTRUDER_READY = printer["gcode_macro _WAIT_Variable"].ready|int %}
    {% set EXTRUDER_TEMP = printer["gcode_macro _WAIT_Variable"].temp|int %}
	
    STATUS_READY
    M117 Performing hot level.
    M400
    M104 S{EXTRUDER_READY}
    CLEAN_NOZZLE
    M117 Calibrate bed.
    Attach_Probe_Lock
    G32
    CALIBRATE_Z
    ADAPTIVE_BED_MESH
    Dock_Probe_Unlock
    PARK_BUCKET
    M104 S{EXTRUDER_TEMP}
    M117 Bringing nozzle to temperature.
    STATUS_HEATING
    M109 S{EXTRUDER_TEMP}

    # Material dependant parameters like PA, firmware retraction, Z_offset, etc...
    RESPOND MSG="Material: {MATERIAL}"
    {% if MATERIAL == "PLA" %}
        SET_PRESSURE_ADVANCE ADVANCE=0.0550
        SET_RETRACTION RETRACT_LENGTH=0.75 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    {% elif MATERIAL == "PET" %}
        SET_PRESSURE_ADVANCE ADVANCE=0.0650
        SET_GCODE_OFFSET Z_ADJUST=0.010 MOVE=1
        #SET_RETRACTION RETRACT_LENGTH=1.4 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=20
        SET_RETRACTION RETRACT_LENGTH=0 RETRACT_SPEED=0 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=0
    {% elif MATERIAL == "ABS" %}
        SET_PRESSURE_ADVANCE ADVANCE=0.0475
        SET_RETRACTION RETRACT_LENGTH=0.5 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    {% endif %}

    LIGHT_ON S=50
    STATUS_READY
    M117 Commencing print.
    M118 Commencing print.


#----------------------------------------- PURGE LINE & READY FOR PRINT -------------------------------------------- 
[gcode_macro PURGE]
description: Wipe the nozzle on the brush
gcode:
    {% set NZLD = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}  
    {% set purgeRetract = printer["gcode_macro globalvariables"].purgeretract|float %}
    STATUS_BUSY
    ; Move to purge zone
    PARK_BUCKET
    M400
    G1 E{(37.5 * NZLD)} F600
    G1 E{(75.0 * NZLD)} F600
    M400
    G92 E0

[gcode_macro CLEAN_NOZZLE]
description: Wipe the nozzle on the brush
gcode:
    G90
    ; Move to center of the brush
    G1 X222 Y307 Z1 F4000
    STATUS_CLEANING
    ; Wipe procedure
    G91
    {% for wipe in range(6) %}
        G1 Y-5 F7800
        G1 Y+5 F7800
    {% endfor %}
    G1 X+20 F7800
    {% for wipe in range(6) %}
        G1 X-40 F7800
        G1 X+40 F7800
    {% endfor %}
    G1 Z10 F1500
    G90

#.................................................................................................................
[gcode_macro END_PRINT]
description: Performs all needed actions upon completion of printing
gcode:
    {% set EndRetract = printer["gcode_macro globalvariables"].endretract|float %}
    PARK_BUCKET
    ERCF_EJECT 
    G92 E0                         ; zero the extruder
    G1 E-{EndRetract} F3600        ; retract filament
    M400
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                           ; wait for buffer to clear
    TURN_OFF_HEATERS
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintcool|float}
    PARK_UpperRight
    M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintparkcool|float}
    LIGHT_OFF
    STATUS_OFF
    RESETSPEEDS  
    M117 Finished printing, check nozzle clear.
    M118 Finished printing, check nozzle clear.



#.................................................................................................................
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    {% set x = params.X|default(275) %}        #edit to your park position
    {% set y = params.Y|default(307) %}       #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
      {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
        G1 Z{z_safe}
        G90
        G1 X{x} Y{y} F4000
      {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %}
    LIGHT_ON
    STATUS_READY


#.................................................................................................................
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    {% set e = params.E|default(1) %} #edit to your retract length
    {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
    {% endif %}
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
    LIGHT_ON S=50
    STATUS_PRINTING


#.................................................................................................................
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set EndRetract = printer["gcode_macro globalvariables"].endretract|float %}
    PARK_BUCKET
    ERCF_EJECT 
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-{EndRetract} F3600        ; retract filament
    CLEAR_PAUSE
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    M106 S250
    G90
    PARK_UpperRight
    M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintparkcool|float}
    LIGHT_OFF
    STATUS_OFF
    RESETSPEEDS  
    M117 Cancelled print, check nozzle clear.
    M118 Cancelled print, check nozzle clear.


#.................................................................................................................
[gcode_macro RESETSPEEDS]
gcode:
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} 
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}  
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity}


#.................................................................................................................
# https://github.com/th33xitus/kiauh/wiki/How-to-autocommit-config-changes-to-github%3F
[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg
	
[gcode_shell_command backup_cfg]
command: sh /home/pi/klipper_config/git_backup.sh
timeout: 30.
verbose: True